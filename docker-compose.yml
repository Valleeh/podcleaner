version: '3'

services:
  # MQTT message broker
  mqtt:
    image: eclipse-mosquitto:2
    ports:
      - "1884:1883"
      - "9002:9001"
    volumes:
      - ./dockerfiles/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - podcleaner-network

  # MinIO object storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - podcleaner-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Initialize MinIO with required buckets
  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/podcleaner;
      /usr/bin/mc policy set public myminio/podcleaner;
      exit 0;
      "
    networks:
      - podcleaner-network

  # Web server
  web:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile.web
    ports:
      - "8080:8080"
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    entrypoint: ["/bin/sh", "-c", "cat > /app/config.yaml << EOF\nlog_level: \"INFO\"\n\nmessage_broker:\n  type: \"mqtt\"\n  mqtt:\n    host: \"mqtt\"\n    port: 1883\n\nweb_server:\n  host: \"0.0.0.0\"\n  port: 8080\n\nobject_storage:\n  provider: \"minio\"\n  bucket_name: \"podcleaner\"\n  endpoint_url: \"http://minio:9000\"\n  access_key: \"minioadmin\"\n  secret_key: \"minioadmin\"\nEOF\n\npython -m podcleaner server web -c /app/config.yaml"]
    networks:
      - podcleaner-network

  # Transcriber service
  transcriber:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile.transcriber
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    entrypoint: ["/bin/sh", "-c", "cat > /app/config.yaml << EOF\nlog_level: \"INFO\"\n\nmessage_broker:\n  type: \"mqtt\"\n  mqtt:\n    host: \"mqtt\"\n    port: 1883\n\nweb_server:\n  host: \"0.0.0.0\"\n  port: 8080\n\nobject_storage:\n  provider: \"minio\"\n  bucket_name: \"podcleaner\"\n  endpoint_url: \"http://minio:9000\"\n  access_key: \"minioadmin\"\n  secret_key: \"minioadmin\"\nEOF\n\npython -m podcleaner server transcriber -c /app/config.yaml"]
    networks:
      - podcleaner-network

  # Ad detector service
  ad-detector:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile.ad-detector
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    entrypoint: ["/bin/sh", "-c", "cat > /app/config.yaml << EOF\nlog_level: \"INFO\"\n\nmessage_broker:\n  type: \"mqtt\"\n  mqtt:\n    host: \"mqtt\"\n    port: 1883\n\nweb_server:\n  host: \"0.0.0.0\"\n  port: 8080\n\nobject_storage:\n  provider: \"minio\"\n  bucket_name: \"podcleaner\"\n  endpoint_url: \"http://minio:9000\"\n  access_key: \"minioadmin\"\n  secret_key: \"minioadmin\"\nEOF\n\npython -m podcleaner server ad-detector -c /app/config.yaml"]
    networks:
      - podcleaner-network

  # Audio processor service
  audio-processor:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile.web
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    entrypoint: ["/bin/sh", "-c", "cat > /app/config.yaml << EOF\nlog_level: \"INFO\"\n\nmessage_broker:\n  type: \"mqtt\"\n  mqtt:\n    host: \"mqtt\"\n    port: 1883\n\nweb_server:\n  host: \"0.0.0.0\"\n  port: 8080\n\nobject_storage:\n  provider: \"minio\"\n  bucket_name: \"podcleaner\"\n  endpoint_url: \"http://minio:9000\"\n  access_key: \"minioadmin\"\n  secret_key: \"minioadmin\"\nEOF\n\npython -m podcleaner server audio-processor -c /app/config.yaml"]
    networks:
      - podcleaner-network

  # Downloader service
  downloader:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile.web
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    entrypoint: ["/bin/sh", "-c", "cat > /app/config.yaml << EOF\nlog_level: \"INFO\"\n\nmessage_broker:\n  type: \"mqtt\"\n  mqtt:\n    host: \"mqtt\"\n    port: 1883\n\nweb_server:\n  host: \"0.0.0.0\"\n  port: 8080\n\nobject_storage:\n  provider: \"minio\"\n  bucket_name: \"podcleaner\"\n  endpoint_url: \"http://minio:9000\"\n  access_key: \"minioadmin\"\n  secret_key: \"minioadmin\"\nEOF\n\npython -m podcleaner server downloader -c /app/config.yaml"]
    networks:
      - podcleaner-network

networks:
  podcleaner-network:
    driver: bridge

volumes:
  minio-data: 