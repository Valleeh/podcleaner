version: '3'

services:
  # MQTT message broker
  mqtt:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./dockerfiles/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - podcleaner-network

  # MinIO object storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - podcleaner-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Initialize MinIO with required buckets
  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/podcleaner;
      /usr/bin/mc policy set public myminio/podcleaner;
      exit 0;
      "
    networks:
      - podcleaner-network

  # Web server
  web:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - WEB_HOST=0.0.0.0
      - WEB_PORT=8080
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    command: ["python", "-m", "podcleaner", "service", "--service", "web"]
    networks:
      - podcleaner-network

  # Transcriber service
  transcriber:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    command: ["python", "-m", "podcleaner", "service", "--service", "transcriber"]
    networks:
      - podcleaner-network

  # Ad detector service
  ad-detector:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    command: ["python", "-m", "podcleaner", "service", "--service", "ad-detector"]
    networks:
      - podcleaner-network

  # Audio processor service
  audio-processor:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    command: ["python", "-m", "podcleaner", "service", "--service", "audio-processor"]
    networks:
      - podcleaner-network

  # Downloader service
  downloader:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile
    depends_on:
      - mqtt
      - minio
    environment:
      - MQTT_HOST=mqtt
      - MQTT_PORT=1883
      - OBJECT_STORAGE_PROVIDER=minio
      - OBJECT_STORAGE_BUCKET_NAME=podcleaner
      - OBJECT_STORAGE_ENDPOINT_URL=http://minio:9000
      - OBJECT_STORAGE_ACCESS_KEY=minioadmin
      - OBJECT_STORAGE_SECRET_KEY=minioadmin
    command: ["python", "-m", "podcleaner", "service", "--service", "downloader"]
    networks:
      - podcleaner-network

networks:
  podcleaner-network:
    driver: bridge

volumes:
  minio-data: 